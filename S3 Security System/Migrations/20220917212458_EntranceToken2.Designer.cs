// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using S3_Security_System.Data;

#nullable disable

namespace S3_Security_System.Migrations
{
    [DbContext(typeof(S3_Security_SystemContext))]
    [Migration("20220917212458_EntranceToken2")]
    partial class EntranceToken2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("S3_Security_System.Areas.Identity.Data.S3_Security_SystemUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("S3_Security_System.Models.Breach", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("BreachResp")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BreachTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateAndTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("S3_Security_SystemUserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ID");

                    b.HasIndex("BreachTypeId");

                    b.HasIndex("S3_Security_SystemUserId");

                    b.ToTable("Breach");
                });

            modelBuilder.Entity("S3_Security_System.Models.BreachType", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("BreachDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BreachTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("BreachType");
                });

            modelBuilder.Entity("S3_Security_System.Models.City", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("CityName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PostalCode")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("City");
                });

            modelBuilder.Entity("S3_Security_System.Models.EntranceToken", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<bool>("AccessGranted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DateObtained")
                        .HasColumnType("datetime2");

                    b.Property<string>("S3_Security_SystemUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("TimeOfEntry")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("TimeOfExit")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("S3_Security_SystemUserId");

                    b.ToTable("EntranceToken");
                });

            modelBuilder.Entity("S3_Security_System.Models.Position", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("PositionDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PositionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Position");
                });

            modelBuilder.Entity("S3_Security_System.Models.Province", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("ProvinceName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Province");
                });

            modelBuilder.Entity("S3_Security_System.Models.Registor", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("S3_Security_SystemUserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ID");

                    b.HasIndex("S3_Security_SystemUserId");

                    b.ToTable("Registor");
                });

            modelBuilder.Entity("S3_Security_System.Models.Staff", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int?>("PositionId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("S3_Security_SystemUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("StaffAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StaffCityId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StaffDateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("StaffFirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StaffLastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StaffNextOfKinContactName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StaffNextOfKinContactNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StaffProvinceId")
                        .HasColumnType("int");

                    b.Property<string>("StaffZip")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("PositionId");

                    b.HasIndex("S3_Security_SystemUserId")
                        .IsUnique()
                        .HasFilter("[S3_Security_SystemUserId] IS NOT NULL");

                    b.HasIndex("StaffCityId");

                    b.HasIndex("StaffProvinceId");

                    b.ToTable("Staff");
                });

            modelBuilder.Entity("S3_Security_System.Models.Student", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int?>("CurrentGrade")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("ParentEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RegistorID")
                        .HasColumnType("int");

                    b.Property<string>("S3_Security_SystemUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("StudentAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StudentCityId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StudentDateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("StudentFirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentLastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentNextOfKinContactName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentNextOfKinContactNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StudentProvinceId")
                        .HasColumnType("int");

                    b.Property<string>("StudentZip")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("RegistorID");

                    b.HasIndex("S3_Security_SystemUserId")
                        .IsUnique()
                        .HasFilter("[S3_Security_SystemUserId] IS NOT NULL");

                    b.HasIndex("StudentCityId");

                    b.HasIndex("StudentProvinceId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("S3_Security_System.Models.Visitor", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("S3_Security_SystemUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("VisitReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VisitorFirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VisitorLastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("S3_Security_SystemUserId")
                        .IsUnique()
                        .HasFilter("[S3_Security_SystemUserId] IS NOT NULL");

                    b.ToTable("Visitors");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("S3_Security_System.Areas.Identity.Data.S3_Security_SystemUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("S3_Security_System.Areas.Identity.Data.S3_Security_SystemUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("S3_Security_System.Areas.Identity.Data.S3_Security_SystemUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("S3_Security_System.Areas.Identity.Data.S3_Security_SystemUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("S3_Security_System.Models.Breach", b =>
                {
                    b.HasOne("S3_Security_System.Models.BreachType", "BreachType")
                        .WithMany()
                        .HasForeignKey("BreachTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("S3_Security_System.Areas.Identity.Data.S3_Security_SystemUser", "S3_Security_SystemUser")
                        .WithMany()
                        .HasForeignKey("S3_Security_SystemUserId");

                    b.Navigation("BreachType");

                    b.Navigation("S3_Security_SystemUser");
                });

            modelBuilder.Entity("S3_Security_System.Models.EntranceToken", b =>
                {
                    b.HasOne("S3_Security_System.Areas.Identity.Data.S3_Security_SystemUser", "S3_Security_SystemUser")
                        .WithMany()
                        .HasForeignKey("S3_Security_SystemUserId");

                    b.Navigation("S3_Security_SystemUser");
                });

            modelBuilder.Entity("S3_Security_System.Models.Registor", b =>
                {
                    b.HasOne("S3_Security_System.Areas.Identity.Data.S3_Security_SystemUser", "S3_Security_SystemUser")
                        .WithMany()
                        .HasForeignKey("S3_Security_SystemUserId");

                    b.Navigation("S3_Security_SystemUser");
                });

            modelBuilder.Entity("S3_Security_System.Models.Staff", b =>
                {
                    b.HasOne("S3_Security_System.Models.Position", "Position")
                        .WithMany()
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("S3_Security_System.Areas.Identity.Data.S3_Security_SystemUser", "S3_Security_SystemUser")
                        .WithOne("Staff")
                        .HasForeignKey("S3_Security_System.Models.Staff", "S3_Security_SystemUserId");

                    b.HasOne("S3_Security_System.Models.City", "StaffCity")
                        .WithMany()
                        .HasForeignKey("StaffCityId");

                    b.HasOne("S3_Security_System.Models.Province", "StaffProvince")
                        .WithMany()
                        .HasForeignKey("StaffProvinceId");

                    b.Navigation("Position");

                    b.Navigation("S3_Security_SystemUser");

                    b.Navigation("StaffCity");

                    b.Navigation("StaffProvince");
                });

            modelBuilder.Entity("S3_Security_System.Models.Student", b =>
                {
                    b.HasOne("S3_Security_System.Models.Registor", null)
                        .WithMany("StudentsPresent")
                        .HasForeignKey("RegistorID");

                    b.HasOne("S3_Security_System.Areas.Identity.Data.S3_Security_SystemUser", "S3_Security_SystemUser")
                        .WithOne("Student")
                        .HasForeignKey("S3_Security_System.Models.Student", "S3_Security_SystemUserId");

                    b.HasOne("S3_Security_System.Models.City", "StudentCity")
                        .WithMany()
                        .HasForeignKey("StudentCityId");

                    b.HasOne("S3_Security_System.Models.Province", "StudentProvince")
                        .WithMany()
                        .HasForeignKey("StudentProvinceId");

                    b.Navigation("S3_Security_SystemUser");

                    b.Navigation("StudentCity");

                    b.Navigation("StudentProvince");
                });

            modelBuilder.Entity("S3_Security_System.Models.Visitor", b =>
                {
                    b.HasOne("S3_Security_System.Areas.Identity.Data.S3_Security_SystemUser", "S3_Security_SystemUser")
                        .WithOne("Visitor")
                        .HasForeignKey("S3_Security_System.Models.Visitor", "S3_Security_SystemUserId");

                    b.Navigation("S3_Security_SystemUser");
                });

            modelBuilder.Entity("S3_Security_System.Areas.Identity.Data.S3_Security_SystemUser", b =>
                {
                    b.Navigation("Staff");

                    b.Navigation("Student");

                    b.Navigation("Visitor");
                });

            modelBuilder.Entity("S3_Security_System.Models.Registor", b =>
                {
                    b.Navigation("StudentsPresent");
                });
#pragma warning restore 612, 618
        }
    }
}
